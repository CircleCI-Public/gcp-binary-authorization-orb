version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@1.0.5

jobs:
  build:
    executor: gcp-cli/default
    # environment:
    #   # CLOUDSDK_PYTHON_SITEPACKAGES: 1
    steps:
      - checkout

      - gcp-cli/install

      - gcp-cli/initialize

      # - run:
      #     name: set default GCP project
      #     command: |
      #       gcloud config set project $GOOGLE_PROJECT_ID
      #       gcloud config set account $GCLOUD_SERVICE_ACCOUNT

      # - run:
      #     name: enable api's
      #     command: |
      #       gcloud services enable \
      #         serviceusage.googleapis.com \
      #         container.googleapis.com \
      #         containeranalysis.googleapis.com \
      #         binaryauthorization.googleapis.com

      # - run:
      #     name: create BinAuthz-enabled GKE cluster
      #     command: |
      #       gcloud auth activate-service-account $GCLOUD_SERVICE_ACCOUNT \
      #         --key-file=${HOME}/gcloud-service-key.json \

      #       # destroy first
      #       gcloud beta container clusters destroy \
      #         --zone $GOOGLE_COMPUTE_ZONE \
      #         test-cluster

      #       gcloud beta container clusters create \
      #         --enable-binauthz \
      #         --zone $GOOGLE_COMPUTE_ZONE \
      #         test-cluster

      - run:
          name: Configure kubectl
          command: |
            # You must also update the local kubeconfig file for your kubectl installation. This provides the credentials and endpoint information required to access the cluster in Google Kubernetes Engine.

            gcloud container clusters get-credentials \
              --zone $GOOGLE_COMPUTE_ZONE \
              test-cluster

      # - run:
      #     name: Create Container Analysis note
      #     command: |
      #       # Set variables that store the name of your attestor and Container Analysis note:
      #       ATTESTOR=test-attestor
      #       NOTE_ID=test-attestor-note

      #       # Create a JSON file in /tmp/note_payload.json that describes the Container Analysis note:
      #       cat > /tmp/note_payload.json \<< EOM
      #       {
      #         "name": "projects/${GOOGLE_PROJECT_ID}/notes/${NOTE_ID}",
      #         "attestation_authority": {
      #           "hint": {
      #             "human_readable_name": "Attestor Note"
      #           }
      #         }
      #       }
      #       EOM

      #       # Create the note by sending an HTTP request to the Container Analysis REST API:
      #       curl -X POST \
      #         -H "Content-Type: application/json" \
      #         -H "Authorization: Bearer $(gcloud auth print-access-token)"  \
      #         --data-binary @/tmp/note_payload.json  \
      #         "https://containeranalysis.googleapis.com/v1beta1/projects/${GOOGLE_PROJECT_ID}/notes/?noteId=${NOTE_ID}"

      #       # Verify that the note was created:
      #       curl \
      #         -H "Authorization: Bearer $(gcloud auth print-access-token)" \
      #         "https://containeranalysis.googleapis.com/v1beta1/projects/${GOOGLE_PROJECT_ID}/notes/${NOTE_ID}"

      # - run:
      #     name: Create the attestor
      #     command: |
      #       ATTESTOR=test-attestor
      #       NOTE_ID=test-attestor-note

      #       # delete first
      #       gcloud beta container binauthz attestors delete ${ATTESTOR}

      #       # Create the attestor in Binary Authorization:
      #       gcloud beta container binauthz attestors create ${ATTESTOR} \
      #       --attestation-authority-note=${NOTE_ID} \
      #       --attestation-authority-note-project=${GOOGLE_PROJECT_ID}

      #       # Verify that the attestor was created:
      #       gcloud beta container binauthz attestors list

      # customer will create keypair outside of the orb
      # store private key in SSH Permissions

      - run:
          name: add pub key to attestor
          command: |
            ATTESTOR=test-attestor
            echo $BIN_AUTHZ_PUB_KEY > /tmp/generated-key.pgp

            gcloud beta container binauthz attestors public-keys add \
              --attestor=${ATTESTOR} \
              --public-key-file=/tmp/generated-key.pgp

workflows:
  lint_pack-validate_publish-dev:
    jobs:
      - build:
          context: orb-publishing
