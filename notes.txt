- secrets / keys storage
  - map multi-stage attestation model to secured contexts
  - no way to headlessly store env vars in contexts, tho, so setup would have to be manual
  - other option is to just store them as project env vars
  - in which case, it could be done via the api
  - but is that desirable ?
  - generating a key at runtime is kind of besides-the-point
  - could provide a command and/or job just to generate a key, store the private key in circle env vars, upload public key to policy (if existing)
  - would likely run out of regular binAuthz flow, as a separate setup task
  - default should be for folks to come to the main functions of the orb with secrets already stored / configured

=> private keys DEF need to live in circle, so attestations cvan be signed

=> support both multi-project (deployer, attestor, attestation) & single-project options

=> support both automated (headless creation of container analysis note) & manual + automated (`hold` job, then headless creation of container analysis note) attestation processes

=> accepts either a string parameter policy YAML or an existing policy.yaml

=> as part of the CI/CD process for the orb, make sure to test deployments w/o attestations & confirm that they fail for the right reasons; then retest w/attestation & confirm success